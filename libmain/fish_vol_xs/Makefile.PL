#!/usr/bin/env perl

use 5.18.0;

my $libmain_dir;
my $libfish_dir;

BEGIN {
    use File::Basename;

    $libmain_dir = '..';
    $libfish_dir = '../../libextra/fish-lib-perl';

    push @INC, dirname $0;
    push @INC, $_ for $libfish_dir, $libmain_dir;
    $0 = basename $0;
}

use Fish::Utility;
Fish::Utility->verbose_cmds(1);
use Fish::Utility_l 'chompp';
use ExtUtils::MakeMaker;

sub get_objs(_@);

my $FISH_UTIL_DIR = '../../libextra/fish-lib-util/fish-util';

my $fish_util_objs = get_objs $FISH_UTIL_DIR;

# See lib/ExtUtils/MakeMaker.pm for details of how to influence
# the contents of the Makefile that is written.
WriteMakefile(
    NAME              => 'fish_vol_xs',
    VERSION_FROM      => 'lib/fish_vol_xs.pm', # finds $VERSION
    PREREQ_PM         => {}, # e.g., Module::Name => 1.1
    ($] >= 5.005 ?     ## Add these new keywords supported since 5.005
      (ABSTRACT_FROM  => 'lib/fish_vol_xs.pm', # retrieve abstract from module
       AUTHOR         => 'misterfish') : ()),
    LIBS              => ['-lasound'], # e.g., '-lm'
    DEFINE            => '', # e.g., '-DHAVE_SOMETHING'
    INC               => '-I.', # e.g., '-I. -I/usr/include/other'
    #INC               => '-I/usr/include/glib-2.0', # e.g., '-I. -I/usr/include/other'
	# Un-comment this if you add C files to link with later:
        #OBJECT            => '$(O_FILES)', # O_FILES is generated by makemaker

        # But, they try to auto-compile fish-util.o for us if fish-util.c
        # changed XX
        MYEXTLIB    => "$fish_util_objs ../../libextra/fish-lib-asound/fish-asound.o",
);

sub get_objs(_@) {
    my ($dir, $depsdir) = @_;
    my @s = sysll sprintf qq,find  "%s" -iname '*.o' -type f ,, shell_quote $dir or
        error "Nothing in dir", BR $dir;
    
    state $transform = sub { 
        my ($a) = @_;

        s, \Q$depsdir\E ,,rx
    };
    
    join ' ', map { chompp; $transform->($_) } @s
}

